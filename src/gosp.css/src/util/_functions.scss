@import "config";

@function isDecimal($num) {
	@return $num % 1 != 0;
}

@function breakpoint($size, $side) {
	@return map-get(map-get($gosp-breakpoints, $size), $side);
}

@function columnPrefix($size) {
	@return map-get(map-get($gosp-breakpoints, $size), prefix);
}

@function em($el, $context: $gosp-font-size-base) {
	@if type_of($el) == number and unit($el) == 'px' {
		@return ($el / $context) * 1em;
  	}
	@else {
		@error 'Function em() requires a px unit as first argument / La funci√≥n em() requiere una unidad de pixeles como primer argumento (el segundo es opcional)';
	}
}

@function rem($el) {
	@if type_of($el) == number and unit($el) == 'px' {
		@return ($el / $font-size-base) * 1rem;
	}
	@else {
		@error 'Function rem() requires a px unit as argument / La funcion rem() requiere una unidad de pixeles como argumento';
	}
}

@function isFlex() {
	@return $gosp-grid-type == flex;
}

@function in($list, $element) {
	@return map-has-key($list, $element);
}
